/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
 class MM_SmartTagUtil 
 {
 	// to be used when context is derived from something that is not of global context.
 	public static $context = null;
 	
	public function registerSmartTags()
	{
		global $wpdb;
		$doRefreshCache = false;
		
		$smarttags = MM_Session::value(MM_Session::$KEY_SMARTTAGS);
		
		// determine if the cache should be refreshed based on if there's a different
		// number of SmartTags in the cache then in the database
		if(!is_null($smarttags) && !empty($smarttags))
		{
			$sql = "SELECT count( id ) AS total FROM ".MM_TABLE_SMARTTAGS.";";
			$row = $wpdb->get_row($sql);
			
			if($row)
			{
				if(isset($row->total) && (intval($row->total) != count($smarttags)))
				{
					$doRefreshCache = true;
				}
			}
		}
		
		if(is_null($smarttags) || empty($smarttags) || $doRefreshCache)
		{
			$sql = "SELECT * FROM ".MM_TABLE_SMARTTAGS;
			$smarttags = $wpdb->get_results($sql);
			
			MM_Session::value(MM_Session::$KEY_SMARTTAGS, $smarttags);
		}
		
		foreach($smarttags as $smarttag)
		{
			add_shortcode($smarttag->name, array($this, 'addShortCode'));
		}
	}
 	
	public function addShortCode($atts, $content=null, $code="")
	{
		return $this->process($content, $code, $atts);
	}
	
 	/*
 	 * @param $contents is a string representation of data to be parsed for tags.
 	 * @param $context is an associative array to be bound with the engine for processing.
 	 * @returns filtered smarttag content.
 	 */
 	public static function processContent($content, MM_Context $context)
 	{
	 	$smartTagUtil = new MM_SmartTagUtil();
	 	$smartTagUtil->registerSmartTags();
	 	
 		self::$context = $context;
 		return do_shortcode($content);
 	}
	
 	/**
 	 * @return MM_User
 	 */
	public static function getCurrentUser($ignoreContext=false)
	{
		global $current_user;
		$user = new MM_User();
		$userId = 0;
		
		// check SmartTag context
		if(!$ignoreContext)
		{
			if(self::$context instanceof MM_Context)
			{
				if(self::$context->getUser() && self::$context->getUser()->isValid())
				{
					$user = self::$context->getUser();
				}
			}
		
			if(!is_null($user) && $user instanceof MM_User && $user->isValid())
			{
				return $user;
			}
		}
		
		// check if a user is currently logged in
		if(is_user_logged_in())
		{
			if(MM_Employee::isEmployee($current_user->ID))
			{
				$user = MM_Preview::getData()->getUser();
			}
			else
			{
				$user = new MM_User($current_user->ID);
			}
			
			if($user->isValid())
			{
				return $user;
			}
		}
		
		// check if there's a transaction key
		if(isset($_REQUEST[MM_Session::$KEY_TRANSACTION_KEY]))
		{
			$transRef = MM_TransactionKey::getTransactionByKey($_REQUEST[MM_Session::$KEY_TRANSACTION_KEY]);
			$userId = ($transRef->isValid()) ? $transRef->getUserId() : 0;
			
			if($userId != 0)
			{
				$user = new MM_User($userId);
					
				if($user->isValid())
				{
					return $user;
				}
			}
		}
		
		// check if there's a user ID in the session
		if(MM_Session::value(MM_Session::$KEY_LAST_USER_ID) !== false)
		{
			$userId = MM_Session::value(MM_Session::$KEY_LAST_USER_ID);
			
			if($userId != 0)
			{
				$user = new MM_User($userId);
					
				if($user->isValid())
				{
					return $user;
				}
			}
		}
		
		return $user;
	}
	
	/**
	 * @return MM_Order
	 */
	public static function getCurrentOrder()
	{
		// check SmartTag context
		if(self::$context instanceof MM_Context)
		{
			if(self::$context->getOrder() && self::$context->getOrder()->isValid())
			{
				$order = self::$context->getOrder();
			}
		}
		
		if(isset($order) && !is_null($order) && $order instanceof MM_Order && $order->isValid())
		{
			return $order;
		}
		
		if(isset($_REQUEST[MM_Session::$KEY_TRANSACTION_KEY]))
		{
			$transRef = MM_TransactionKey::getTransactionByKey($_REQUEST[MM_Session::$KEY_TRANSACTION_KEY]);
			$orderId = ($transRef->isValid()) ? $transRef->getOrderId() : 0;
				
			if(intval($orderId) > 0)
			{
				$order = new MM_Order($orderId);
					
				if($order->isValid())
				{
					return $order;
				}
			}
		}
		
		// check if there's an order ID in the session
		if(MM_Session::value(MM_Session::$KEY_LAST_ORDER_ID) !== false)
		{
			$orderId = MM_Session::value(MM_Session::$KEY_LAST_ORDER_ID);
				
			if(intval($orderId) > 0)
			{
				$order = new MM_Order($orderId);
					
				if($order->isValid())
				{
					return $order;
				}
			}
		}
		
		return new MM_Order();
	}
	
	/**
	 * @return MM_Product
	 */
	public static function getCurrentProduct()
	{
		// check SmartTag context
		if(self::$context instanceof MM_Context)
		{
			if(self::$context->getProduct() && self::$context->getProduct()->isValid())
			{
				$product = self::$context->getProduct();
			}
		}
	
		if(isset($product) && !is_null($product) && $product instanceof MM_Product && $product->isValid())
		{
			return $product;
		}
		
		return new MM_Product();
	}
	
 	public function process($content, $code, $atts)
 	{
 		global $current_user;
 		
 		// process Decision tags
 		if(MM_DecisionTagProcessor::isDecisionSmartTag(strtolower($code)))
 		{
 			return MM_DecisionTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Content tags
 		if(MM_ContentTagProcessor::isContentSmartTag(strtolower($code)))
 		{
 			return MM_ContentTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Core Page tags
 		if(MM_CorePageTagProcessor::isCorePageSmartTag(strtolower($code)))
 		{
 			return MM_CorePageTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Form tags
 		if(MM_FormTagProcessor::isFormSmartTag(strtolower($code)))
 		{
 			return MM_FormTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Employee tags
 		if(MM_EmployeeTagProcessor::isEmployeeSmartTag(strtolower($code)))
 		{
 			return MM_EmployeeTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Member tags
 		if(MM_MemberTagProcessor::isMemberSmartTag(strtolower($code)))
 		{
 			return MM_MemberTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Order tags
 		if(MM_OrderTagProcessor::isOrderSmartTag(strtolower($code)))
 		{
 			return MM_OrderTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Error tags
 		if(MM_ErrorTagProcessor::isErrorSmartTag(strtolower($code)))
 		{
 			return MM_ErrorTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		
 		// process Custom Field tags
 		if(MM_CustomFieldTagProcessor::isCustomFieldSmartTag(strtolower($code)))
 		{
 			return MM_CustomFieldTagProcessor::processSmartTag(strtolower($code), $content, $atts, $code);
 		}
 		 		
		return "[{$code}] is not a valid SmartTag";
 	}
 	
 	public static function saveTags($content, $postId)
 	{
 		global $wpdb;
 		$sql = "delete from ".MM_TABLE_POSTS_ACCESS." where post_id='{$postId}' and is_smart_content='1'";
 		$wpdb->query($sql);
 		
	 	$pattern = "\[[^\]]+\]";
	    preg_match_all('/'.$pattern.'/', $content, $matches);

	    if(isset($matches[0]) && count($matches[0])>0)
	    {
			for($i=0; $i<count($matches[0]); $i++)
			{
				self::addShortCodeAccess(shortcode_parse_atts($matches[0][$i]), $postId);
			}
		}
 	}
 	
 	private static function addShortCodeAccess($atts, $postId)
 	{
 		global $wpdb;
 		
 		$type = "";
 		$typeId = 0;
 		$days = 0;
 		$queue = array();
 		if(is_array($atts))
 		{
 			foreach($atts as $k=>$v)
 			{
 				if(preg_match("/(membershipid|hasbundle)/", strtolower($k)))
 				{
 					switch($k)
 					{
 						case "membershipid":
 							$type = MM_TYPE_MEMBERSHIP_LEVEL;
 							$typeId = intval(preg_replace("/[^0-9]+/", "", $v));
 							break;
 						case "hasbundle":
 							$type = MM_TYPE_BUNDLE;
 							$typeId = intval(preg_replace("/[^0-9]+/", "", $v));
 							break;
 					}
 				}
 				else if(preg_match("/(daysasmember|dayswithbundle)/", strtolower($v)))
 				{
 					$days = intval(preg_replace("/[^0-9]+/", "", $v));
 				}
 			}
 			
 			if($typeId>0 && $days>=0 && $postId>0 && ($type == MM_TYPE_MEMBERSHIP_LEVEL || $type == MM_TYPE_BUNDLE))
 			{
 				$key = $typeId."_".$type."_".$postId."_".$days;
 				if(!isset($queue[$key]))
 				{
 					$queue[$key] = 1;
	 				$sql = "INSERT INTRO ".MM_TABLE_POSTS_ACCESS." SET 
	 							post_id='{$postId}', 
	 							access_type = '{$type}',
	 							access_id='{$typeId}',
	 							days='{$days}',
	 							is_smart_content='1'			
	 				";
	 				$wpdb->query($sql);
 				}
 			}
 		}
 	}
 }
