/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
abstract class MM_View
{ 
	public static $MM_JSACTION = "mm_action";
	public static $MM_JSMODULE = "mm_module";
	public static $MM_JSACTION_SAVE = "save";
	public static $MM_JSACTION_REMOVE = "remove";
	public static $MM_JSACTION_SHOW_DIALOG = "showDialog";
	public static $MM_JSACTION_REFRESH_VIEW = "refreshView";
	public static $MM_JSACTION_SHOW_BUY_NOW_LINKS = "showPurchaseLinks";
	
	
	function __construct()
 	{
 		// do nothing
 	}
 	
 	public function callMethod($post) 
 	{
 		if(isset($post["method"]))
		{
			if(method_exists($this, $post["method"])) 
			{
				return call_user_func_array(array($this, $post["method"]), array($post));
			}
		}
		
		return array();
 	}
	
	public function performAction($post) 
	{	
		if(isset($post[self::$MM_JSACTION])) 
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_REFRESH_VIEW:
					return $this->refreshView($post);
				
				case self::$MM_JSACTION_SHOW_DIALOG:
					return $this->showDialog($post);
					
				default:
					return "";
			}
		}
		else 
		{
			return new MM_Response("MM_View.performAction(): '".self::$MM_JSACTION."' is required", MM_Response::$ERROR);
		}
	}
 	
	private function showResponseDialog($post)
	{
		$info->message = (!isset($post["message"]))?"Oh, something bad happened":$post["message"];
 		$msg = MM_TEMPLATE::generate(MM_MODULES."/response.php", $info);
 		return new MM_Response($msg);
	}
	
	protected function refreshView($post)
	{
		$crntModule = $this->getModule($post, $post[self::$MM_JSACTION]);
		
		if($crntModule != "") 
		{
			$_REQUEST["module"] = $crntModule;
			
			ob_start();
			include($module=MM_MODULES."/".$crntModule.".php");
			$contents = ob_get_contents();
			ob_end_clean();
			return $contents;
		}
		else 
		{
			return "MM_View.refreshView(): requested module does not exist".$post[self::$MM_JSMODULE];
		}
	}
	
	protected function showDialog($post)
	{
		$info = new stdClass();
		
		foreach($post as $key=>$value)
		{
			$info->$key = $value;
		}
		
		if(!isset($info->id)) 
		{
			$info->id = "";
		}
		
		$crntModule = $this->getModule($post);
		
		if($crntModule != "") 
		{
			return MM_TEMPLATE::generate(MM_MODULES."/".$crntModule.".dialog.php", $info);
		}
		else 
		{
			return new MM_Response("MM_View.showDialog(): ".self::$MM_JSMODULE." requested module does not exist", MM_Response::$ERROR);
		}
	}
	
	private function getModule($post, $action="")
	{	
		if($this instanceof MM_MembershipLevelsView) 
		{
			return MM_MODULE_MEMBERSHIP_LEVELS;
		}
		else if($this instanceof MM_CommissionProfilesView) 
		{
			return MM_MODULE_COMMISSION_PROFILES;
		}
		else if($this instanceof MM_ApiView) 
		{
			return MM_MODULE_API;
		}
		else if($this instanceof MM_ProductView) 
		{
			return MM_MODULE_PRODUCTS;
		}
		else if($this instanceof MM_EventLogView) 
		{
			return MM_MODULE_EVENT_LOG;
		}
		else if($this instanceof MM_TransactionHistoryView) 
		{
			return MM_MODULE_MEMBER_DETAILS_TRANSACTION_HISTORY;
		}
		else if($this instanceof MM_DripContentScheduleView)
		{
			return MM_MODULE_DRIP_CONTENT_SCHEDULE;
		}
		else if($this instanceof MM_CouponView) 
		{
			return MM_MODULE_COUPONS;
		}
		else if($this instanceof MM_PushNotificationView) 
		{
			return MM_MODULE_PUSH_NOTIFICATIONS;
		}
		else if($this instanceof MM_CustomFieldView) 
		{
			return MM_MODULE_CUSTOM_FIELDS;
		}
		else if($this instanceof MM_BundlesView) 
		{
			return MM_MODULE_BUNDLES;
		}
		else if($this instanceof MM_EmployeesView) 
		{
			return MM_MODULE_EMPLOYEES;
		}
		else if($this instanceof MM_MembersView) 
		{	
			return MM_MODULE_BROWSE_MEMBERS;
		}
		else if($this instanceof MM_MemberDetailsView && $action == MM_MemberDetailsView::$MM_JSACTION_UPDATE_MEMBER)
		{
			return MM_MODULE_MEMBER_DETAILS_GENERAL;
		}
		else if($this instanceof MM_AccessRightsView || $this instanceof MM_CorePagesView) 
		{
			return MM_MODULE_META;
		}
		else if($this instanceof MM_DashboardView) 
		{
			return MM_MODULE_DASHBOARD;
		}
		else if($this instanceof MM_EmailIntegrationView) 
		{
			return MM_MODULE_EMAIL_INTEGRATION;
		}
		else if($this instanceof MM_ShippingMethodsView)
		{
			return MM_MODULE_SHIPPING;
		}
		else 
		{
			if(isset($post[self::$MM_JSMODULE])) 
			{
				return $post[self::$MM_JSMODULE];
			} 
			else 
			{
				return "";
			}
		}
	}
	
	public function uploadFile() 
	{
		$error = "";
		$msg = "";
		$fileElementName = 'fileToUpload';
		
		if(!empty($_FILES[$fileElementName]['error']))
		{
			switch($_FILES[$fileElementName]['error'])
			{
	
				case '1':
					$error = 'The uploaded file exceeds the upload_max_filesize directive in php.ini';
					break;
					
				case '2':
					$error = 'The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the HTML form';
					break;
					
				case '3':
					$error = 'The uploaded file was only partially uploaded';
					break;
					
				case '4':
					$error = 'No file was uploaded';
					break;
	
				case '6':
					$error = 'Missing a temporary folder';
					break;
					
				case '7':
					$error = 'Failed to write file to disk';
					break;
					
				case '8':
					$error = 'File upload stopped by extension';
					break;
					
				case '999':
				default:
					$error = 'No error code avaiable';
			}
		}
		elseif(empty($_FILES['fileToUpload']['tmp_name']) || $_FILES['fileToUpload']['tmp_name'] == 'none')
		{
			$error = 'No file was uploaded';
		} 
		else 
		{
				$msg .= " File Name: " . $_FILES['fileToUpload']['name'] . ", ";
				$msg .= " File Size: " . @filesize($_FILES['fileToUpload']['tmp_name']);
				
				//for security reasons, we force the removal of all uploaded files
				$overrides = array('test_form' => false);
				$file=wp_handle_upload($_FILES['fileToUpload'], $overrides);
				
				@unlink($_FILES['fileToUpload']);
				
				$fileExists = false;
				if(file_exists($file['file'])){
					$fileExists = true;	
				}
				
				if(!isset($file["error"]) && isset($file["url"]) && $fileExists) {
					echo "<script type='text/javascript'>top.mmjs.stopUpload('1','".$file["url"]."','".$file["file"]."');</script>";
				} 
				else if(!$fileExists){
					echo "<script type='text/javascript'>top.mmjs.stopUpload('0','".preg_replace("/[\'\"]+/","", "File was not uploaded successfully, please check directory permissions.")."');</script>";
				}
				else {
					echo "<script type='text/javascript'>top.mmjs.stopUpload('0','".preg_replace("/[\'\"]+/","", $file["error"])."');</script>";	
				}
		}
	}
 	
 	public function getData($tableName, $fields=null, MM_DataGrid $dg=null, $where = "", $getTotal=false)
 	{
		global $wpdb;
		
		$columns = (is_null($fields)) ? "tbl.*" : implode(",", $fields);
		
 		$sqlResultCount = "SELECT count(distinct id) as total FROM ".$tableName;
		if(!empty($where))
		{
			if(preg_match("/^(where)/", strtolower(trim($where))))
			{
				$sqlResultCount.= " {$where} ";
			}	
			else
			{
				$sqlResultCount.= " where {$where} ";
			}
		}
		
		$countRow = $wpdb->get_row($sqlResultCount);
		
		if($countRow) 
		{
			$sql = "SELECT '{$countRow->total}' as total, ".$columns." FROM ".$tableName." as tbl ";
		}
		else 
		{
			$sql = "SELECT ".$columns." FROM ".$tableName." ";
		}
		
		if(!empty($where))
		{
			if(preg_match("/^(where)/", strtolower(trim($where))))
			{
				$sql.= " {$where} ";
			}	
			else
			{
				$sql.= " where {$where} ";
			}
		}
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) 
		{
			$sql.= "ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		if($getTotal)
		{
			$result = $wpdb->get_results($sql);
			return $result;
		}
		
		if(!is_null($dg)) 
		{
			$sql .= $dg->getLimitSql();
		}

		$result = $wpdb->get_results($sql);
		
		if(!$result || is_null($result)) 
		{
			return array();
		}
		
		return $result;
 	}
}
