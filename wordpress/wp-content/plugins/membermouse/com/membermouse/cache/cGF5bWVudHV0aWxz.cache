/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_PaymentUtils
{
	/**
	 * This method is responsible for looking up the order item associated with the user and access 
	 * information passed and cancelling the associated subscription if there is one.
	 * 
	 * @param MM_User $user the user to cancel the subscription for
	 * @param Object $accessObject this will either be an instance of MM_MembershipLevel or MM_Bundle and represents the access right to cancel
	 * @return MM_Response a response object indicating if the operation went through successfully or not
	 */
	public static function cancelSubscription(MM_User $user, $accessObject)
	{
		$accessType = "";
		$accessTypeId = 0;
		$executionStatus = new MM_Response();
	
		if($user->isValid())
		{
			if($accessObject instanceof MM_MembershipLevel)
			{
				$accessType = MM_AccessControlEngine::$ACCESS_TYPE_MEMBERSHIP;
				$accessTypeId = $accessObject->getId();
			}
			else if($accessObject instanceof MM_Bundle)
			{
				$accessType = MM_AccessControlEngine::$ACCESS_TYPE_BUNDLE;
				$accessTypeId = $accessObject->getId();
			}
			else
			{
				$executionStatus = new MM_Response("Error cancelling subscription. Invalid access object.", MM_Response::$ERROR);
			}
			
			if(MM_Response::isSuccess($executionStatus))
			{
				$orderItemAccess = MM_OrderItemAccess::getOrderItemByAccess($user->getId(), $accessType, $accessTypeId);
				
				if($orderItemAccess->isValid())
				{
					$orderItem = new MM_OrderItem($orderItemAccess->getOrderItemId());
					
					if($orderItem->isValid())
					{
						$order = new MM_Order($orderItem->getOrderId());
						
						if($order->isValid())
						{
							$paymentService = $order->getPaymentMethod();
							
							if(!is_null($paymentService))
							{
								if($orderItem->getStatus() == MM_OrderItem::$STATUS_RECURRING 
										|| $orderItem->getStatus() == MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED)
								{
									$paymentResponse = $paymentService->cancelSubscription($orderItem);
									
									if(MM_PaymentServiceResponse::isSuccess($paymentResponse))
									{
										$executionStatus = new MM_Response($paymentResponse->getMessage(), MM_Response::$SUCCESS);
									}
									else
									{
										$executionStatus = new MM_Response($paymentResponse->getMessage(), MM_Response::$ERROR);
									}
								}
								else
								{
									// no subscription to cancel
									$executionStatus = new MM_Response();
								}
							}
							else
							{
								$executionStatus = new MM_Response("Error cancelling subscription. Invalid payment service.", MM_Response::$ERROR);
							}
						}
						else
						{
							$executionStatus = new MM_Response("Error cancelling subscription. Invalid order.", MM_Response::$ERROR);
						}
					}
					else
					{
						$executionStatus = new MM_Response("Error cancelling subscription. Invalid order item.", MM_Response::$ERROR);
					}
				}
				else
				{
					// no subscription to cancel
					$executionStatus = new MM_Response();
				}
				
				return $executionStatus;
			}
			else
			{
				return $executionStatus;
			}
		}
		else
		{
			return new MM_Response("Error cancelling subscription. Invalid user.", MM_Response::$ERROR);
		}
	}
	
	
	/**
	 * This method is responsible for updating the the billing details associated with a particular order item.
	 *
	 * @param MM_OrderItem $orderItem the order item to update the billing details for
	 * @param MM_CardInfo $cardInfo the credit card info to use on the subscription
	 * @param MM_CustomerAddress $billingAddress the billing address to use on the subscription
	 * @return MM_Response a response object indicating if the operation went through successfully or not
	 */
	public static function updateSubscriptionBillingInfo(MM_OrderItem $orderItem, MM_CardInfo $cardInfo=null, MM_CustomerAddress $billingAddress=null)
	{
		$executionStatus = new MM_Response();
	
		if($orderItem->isValid())
		{
			$order = new MM_Order($orderItem->getOrderId());

			if($order->isValid())
			{
				$paymentService = $order->getPaymentMethod();
					
				if(!is_null($paymentService))
				{
					if($orderItem->getStatus() == MM_OrderItem::$STATUS_RECURRING
						|| $orderItem->getStatus() == MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED)
					{
						$paymentResponse = $paymentService->updateSubscriptionInfo($orderItem, $cardInfo, $billingAddress);
						
						if(MM_PaymentServiceResponse::isSuccess($paymentResponse))
						{
							$executionStatus = new MM_Response($paymentResponse->getMessage(), MM_Response::$SUCCESS);
						}
						else
						{
							$executionStatus = new MM_Response($paymentResponse->getMessage(), MM_Response::$ERROR);
						}
					}
					else
					{
						// no subscription to update
						$executionStatus = new MM_Response();
					}
				}
				else
				{
					$executionStatus = new MM_Response("Error cancelling subscription. Invalid payment service.", MM_Response::$ERROR);
				}
			}
			else
			{
				$executionStatus = new MM_Response("Error cancelling subscription. Invalid order.", MM_Response::$ERROR);
			}
			
			return $executionStatus;
		}
		else
		{
			$executionStatus = new MM_Response("Error cancelling subscription. Invalid order item.", MM_Response::$ERROR);
		}
	}
}
