/**
 * 
 * The Affiliate Controller provides the main interface that the rest of the application will use to execute methods on the
 * active affiliate provider
 *
 */
class MM_AffiliateController 
{	
	public static function setup()
	{
		$ac = new MM_AffiliateController();
		add_action(MM_Event::$MEMBER_ADD, array($ac, 'createAffiliateAccount'));
		add_action(MM_Event::$PAYMENT_RECEIVED, array($ac, 'trackCommission'));
		add_action(MM_Event::$PAYMENT_REBILL, array($ac, 'trackRebillCommission'));
		add_action(MM_Event::$REFUND_ISSUED, array($ac, 'reverseCommission'));
	}
	
	public function trackCommission($data, $isRebill=false)
	{
		$orderNumber = $this->getOrderNumber($data);
		
		// check if commission should be tracked based on if there is an affiliate ID
		if(isset($data["order_affiliate_id"]) && !empty($data["order_affiliate_id"]))
		{
			$affiliateId = $data["order_affiliate_id"];
			$commissionProfile = $this->getCommissionProfile($data);
			$this->_trackCommission($commissionProfile, $affiliateId, $orderNumber, $data, $isRebill);
		}
		
		// check if there are any partner payouts
		$partners = $this->getPartnerPayouts($data);
		
		foreach($partners as $partner)
		{
			$commissionProfile = new MM_CommissionProfile($partner->commissionProfileId);
			
			if(!$commissionProfile->isValid())
			{
				$commissionProfile = MM_CommissionProfile::getDefaultCommissionProfile();
			}
			
			$this->_trackCommission($commissionProfile, $partner->affiliateId, $orderNumber."-{$partner->affiliateId}", $data, $isRebill);
		}
	}
	
	public function trackRebillCommission($data)
	{
		$this->trackCommission($data, true);
	}
	
	private function _trackCommission(MM_CommissionProfile $commissionProfile, $affiliateId, $orderNumber, $data, $isRebill)
	{
		$affiliateProvider = MM_AffiliateProviderFactory::getActiveProvider();
		$doTrackCommission = false;
			
		// check if commission should be tracked based on if initial or rebill commissions
		// are enabled on the profile, and if this is a rebill payment, if there is a limit
		// and if it has been reached.
		if(!$isRebill && $commissionProfile->initialCommissionEnabled())
		{
			$doTrackCommission = true;
		}
		else if($isRebill && $commissionProfile->rebillCommissionsEnabled())
		{
			if($commissionProfile->doLimitRebills())
			{
				// check if rebill limit exceeded
				global $wpdb;
				$totalRebills = 0;
					
				$provider_entity = new MM_AffiliateProvider();
				$provider_entity->setToken($affiliateProvider->getToken());
				$provider_entity->getData();
					
				$sql = "SELECT count(*) as totalRebills FROM ".MM_TABLE_AFFILIATE_REBILL_COMMISSIONS ." WHERE ";
				$sql .= "affiliate_provider_id='{$provider_entity->getId()}' AND affiliate_id='{$affiliateId}' ";
				$sql .= "AND order_number='{$data["order_number"]}'";
				$row = $wpdb->get_row($sql);
					
				if(isset($row->totalRebills))
				{
					$totalRebills = intval($row->totalRebills);
				}
					
				if($totalRebills < $commissionProfile->getRebillCommissionLimit())
				{
					$doTrackCommission = true;
				}
			}
			else
			{
				$doTrackCommission = true;
			}
		}
			
		if($doTrackCommission)
		{
			$orderTotal = floatval($data["order_total"]) - floatval($data["order_shipping"]);
		
			$result = $affiliateProvider->trackCommission($commissionProfile, $affiliateId, $orderNumber, $orderTotal, $data, $isRebill);
				
			// track rebill commissions
			if(MM_Response::isSuccess($result) && $isRebill)
			{
				global $wpdb;
		
				$provider_entity = new MM_AffiliateProvider();
				$provider_entity->setToken($affiliateProvider->getToken());
				$provider_entity->getData();
		
				$rebillData = array();
				$rebillData['affiliate_provider_id'] = $provider_entity->getId();
				$rebillData['affiliate_id'] = $affiliateId;
				$rebillData['order_number'] = $data["order_number"];
				$rebillData['transaction_id'] = $data["order_transaction_id"];
		
				$wpdb->insert(MM_TABLE_AFFILIATE_REBILL_COMMISSIONS, $rebillData);
			}
				
			// dispatch push notifications
			if(!$isRebill)
			{
				do_action(MM_Event::$COMMISSION_INITIAL, MM_Event::packageAffiliateData($commissionProfile, $affiliateId, $orderNumber, $orderTotal, $data));
			}
			else
			{
				do_action(MM_Event::$COMMISSION_REBILL, MM_Event::packageAffiliateData($commissionProfile, $affiliateId, $orderNumber, $orderTotal, $data, true));
			}
		}
	}
	 
	public function reverseCommission($data)
	{
		$affiliateProvider = MM_AffiliateProviderFactory::getActiveProvider();
		$orderNumber = $this->getOrderNumber($data);
		$commissionProfile = $this->getCommissionProfile($data);
		
		if($commissionProfile->doReverseCommissions())
		{
			$affiliateId = $data["order_affiliate_id"];
		 	$result = $affiliateProvider->reverseCommission($affiliateId, $orderNumber);
		 	
		 	// dispatch push notification
		 	do_action(MM_Event::$CANCEL_COMMISSION, MM_Event::packageAffiliateData($commissionProfile, $affiliateId, $orderNumber, "", $data));
		}
		
		// check if there are any partner payouts
		$partners = $this->getPartnerPayouts($data);
		
		foreach($partners as $partner)
		{
			$commissionProfile = new MM_CommissionProfile($partner->commissionProfileId);
			
			if($commissionProfile->isValid() && $commissionProfile->doReverseCommissions())
			{
				$result = $affiliateProvider->reverseCommission($partner->affiliateId, $orderNumber."-{$partner->affiliateId}");
				
				// dispatch push notification
				do_action(MM_Event::$CANCEL_COMMISSION, MM_Event::packageAffiliateData($commissionProfile, $partner->affiliateId, $orderNumber."-{$partner->affiliateId}", "", $data));
			}
		}
	}
	
	public function createAffiliateAccount($data)
	{
		$affiliateProvider = MM_AffiliateProviderFactory::getActiveProvider();
		$affiliateProvider->createAffiliateAccount($data);
	}
	
	private function getOrderNumber($orderData)
	{
		$orderNumber = $orderData["order_number"];
			
		if(!empty($orderData["order_transaction_id"]))
		{
			$orderNumber .= "-{$orderData["order_transaction_id"]}";
		}
		
		return $orderNumber;
	}
	
	private function getCommissionProfile($orderData)
	{
		$commissionProfile = new MM_CommissionProfile();
		
		if(isset($orderData["order_products"]))
		{
			$products = json_decode(stripslashes($orderData["order_products"]));
				
			foreach($products as $product)
			{
				$p = new MM_Product($product->id);
				
				if($p->isValid())
				{
					return $p->getCommissionProfile();
				}
			}
		}
		
		return $commissionProfile;
	}
	
	private function getPartnerPayouts($orderData)
	{
		$partners = array();
		
		if(isset($orderData["order_products"]))
		{
			$products = json_decode(stripslashes($orderData["order_products"]));
		
			foreach($products as $item)
			{
				$product = new MM_Product($item->id);
				
				if($product->isValid())
				{
					$partners = $product->getPartners();
					
					// only supports one product right now
					break;
				}
			}
		}
		
		return $partners;
	}
}

