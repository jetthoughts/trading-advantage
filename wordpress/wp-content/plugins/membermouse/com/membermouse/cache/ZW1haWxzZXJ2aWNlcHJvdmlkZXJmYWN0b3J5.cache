/**
 * 
 * The Email Service Provider Factory does the work of retrieving and configuring an Email Service Provider implementation
 *
 */
class MM_EmailServiceProviderFactory {
	
	/**
	 * Returns the active Email Service Provider
	 */
	public static function getActiveProvider() {
		global $wpdb;
		
		$provider_info = $wpdb->get_row("select * from ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." where active='1' limit 1");
		if (!empty($provider_info->password))
		{
			$provider_info->password = MM_MemberMouseService::decryptPassword($provider_info->password);
		}
		return self::_getProvider($provider_info);
	}
	
	/**
	 * Returns a specific Email Service Provider, regardless of whether it is the active provider or not
	 * @param String $provider_token The provider token identifying the provider in the database
	 */
	public static function getProvider($provider_token) {
		global $wpdb;
		
		$provider_info = $wpdb->get_row($wpdb->prepare("select * from ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." where provider_token=%s",$provider_token));
		if (!empty($provider_info->password))
		{
			$provider_info->password = MM_MemberMouseService::decryptPassword($provider_info->password);
		}
		return self::_getProvider($provider_info);
	}
	
	/**
	 * Gets the provider the member is subscribed to, the active provider if none
	 * @param member email to get the provider for
	 * 
	 */
	public static function getProviderForMember($member_email)
	{
		$member = MM_User::findByEmail($member_email);
		
		if ($member->isValid())
		{
			$provider_entity = new MM_EmailServiceProvider();
			$provider_entity->setId($member->getSubscribedProviderId());
			$provider_entity->getData();
			if ($provider_entity->isValid())
			{
				return self::getProvider($provider_entity->getToken());
			}
		}
		
		return self::getActiveProvider();
	}
	
	/**
	 * 
	 * Internal function used to determine the correct class to use and to instantiate, initialize, and return it
	 * @param String $provider_info 
	 */
	private static function _getProvider($provider_info) {
		$provider_token = $provider_info->provider_token;
		switch($provider_token) 
		{
			case "mailchimp":
				return new MM_MailChimpEmailServiceProvider($provider_info);
			case "icontact":
				return new MM_IContactEmailServiceProvider($provider_info);
			case "aweber":
				return new MM_AWeberEmailServiceProvider($provider_info);
			case "getresponse":
				return new MM_GetResponseEmailServiceProvider($provider_info);
			case "default":
				return new MM_DefaultEmailServiceProvider($provider_info);
			default:
				return null;
				
		}
	} 
	
}

