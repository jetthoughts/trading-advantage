/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_CustomFieldView extends MM_View
{
	public static $MM_JSACTION_CANCEL_CREATION = "cancelCreation";
	public static $MM_JSACTION_SHOW_SMARTTAGS = "showCheckoutFormSmartTags";
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE:
					return $this->saveCustomField($post);
					
				case self::$MM_JSACTION_CANCEL_CREATION:
					return $this->removeCustomField($post);
					
				case self::$MM_JSACTION_REMOVE:
					return $this->removeCustomField($post);
					
				case self::$MM_JSACTION_SHOW_SMARTTAGS:
					return $this->showCheckoutFormSmartTags($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function getViewData(MM_DataGrid $dg)
	{
		global $wpdb;
		
		$rows = parent::getData(MM_TABLE_CUSTOM_FIELDS, null, $dg, "is_hidden = '0'");
		
		return $rows;
	}
	
	public function removeCustomField($post)
	{
		if(isset($post["id"]) && intval($post["id"]) > 0)
		{
			$customField = new MM_CustomField($post["id"], false);
			$result = $customField->delete();
			
			if($result) 
			{
				return new MM_Response();
			} 
		}
		
		return new MM_Response("Unable to delete custom field. No ID specified.", MM_Response::$ERROR);
	}
	
	
	private function saveCustomField($post)
	{	
		$customField = new MM_CustomField();
		
		if(isset($post["mm_id"]) && intval($post["mm_id"]) > 0) 
		{
			$customField->setId($post["mm_id"]);
		}
		
		$customField->setDisplayName($post["mm_display_name"]);
		$customField->setShowOnMyAccount($post["mm_show_on_my_account"]);
		$customField->setType($post["mm_field_type"]);
		
		// set options
		$customField->deleteOptions();
		
		if(MM_CustomField::typeRequiresOptions($post["mm_field_type"]))
		{
			foreach($post as $key => $value) 
			{
				if(strpos($key, 'mm_field_option_') === 0) 
				{
					if(!empty($value))
					{
						$customField->addOption($value);
					}
				}
			}
		}
		
		return $customField->commitData();
	}
	
	private function showCheckoutFormSmartTags($post)
	{
		if(isset($post["custom_field_id"]) && isset($post["custom_field_name"]))
		{
			$data = new stdClass();
			$data->customFieldId = $post["custom_field_id"];
			$data->customFieldName = stripslashes($post["custom_field_name"]);
				
			$content = MM_TEMPLATE::generate(MM_MODULES."/".MM_MODULE_CUSTOM_FIELDS.".smarttags.dialog.php", $data);
			return new MM_Response($content);
		}
		else
		{
			return new MM_Response("Custom field ID and name are required to display checkout form SmartTags", MM_Response::$ERROR);
		}
	}
}
