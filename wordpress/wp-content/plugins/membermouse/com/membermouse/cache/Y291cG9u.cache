/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */

class MM_Coupon extends MM_Entity
{
	public static $TYPE_PERCENTAGE = "percentage";
	public static $TYPE_DOLLAR = "dollar";
	public static $TYPE_FREE = "free";
	public static $TYPE_RECURRING_BILLING_SETTING_ALL = "all";
	public static $TYPE_RECURRING_BILLING_SETTING_FIRST = "first";
	
	public $shouldUpdateProducts = true;

	private $couponCode = "";
	private $couponType = "";
	private $couponValue = "";
	private $couponValueCurrency = "";
	private $description = "";
	private $quantity = "";
	private $startDate = "";
	private $endDate = "";
	private $couponName = "";
	private $recurringBillingSetting = "first";
	private $products = array();

	public function getData()
	{
		global $wpdb;
		$sql = "SELECT * FROM ".MM_TABLE_COUPONS." WHERE id='".$this->id."'";
		$result = $wpdb->get_row($sql);

		if($result)
		{
			$this->setData($result);
		}
		else 
		{
			parent::invalidate();
		}
	}
		
	public function hasProduct($productId)
	{
		global $wpdb;
		$sql = "select count(*) as total from ".MM_TABLE_COUPON_RESTRICTIONS."
					 where coupon_id='{$this->id}' ";
		$row = $wpdb->get_row($sql);
		
		if($row->total>0)
		{
			$sql = "select count(*) as total from ".MM_TABLE_COUPON_RESTRICTIONS."
						 where coupon_id='{$this->id}' and product_id='{$productId}' ";
			
			$row = $wpdb->get_row($sql);
			return $row->total>0;
		}
		return true;
	}
	
	public function getFormFields()
	{
		$info = new stdClass();
		$info->coupon_code = $this->couponCode;
		$info->coupon_type = $this->couponType;
		$info->coupon_value = $this->couponValue;
		$info->description = $this->description;
		$info->quantity = $this->quantity;
		$info->start_date = $this->startDate;
		$info->end_date = $this->endDate;
		$info->coupon_name = $this->couponName;
		$info->recurring_billing_setting = $this->recurringBillingSetting;
		$info->products = $this->products;
		return $info;
	}

	public function setData($data)
	{
		try 
		{
			$this->couponCode = $data->coupon_code;
			$this->couponType = $data->coupon_type;
			$this->couponValue = $data->coupon_value;
			$this->couponValueCurrency = $data->coupon_value_currency;
			$this->description = $data->description;
			$this->quantity = $data->quantity;
			$this->startDate = $data->start_date;
			$this->endDate = $data->end_date;
			$this->recurringBillingSetting = $data->recurring_billing_setting;
			$this->couponName = $data->coupon_name;
			
			if(isset($data->products) && is_array($data->products))
			{
				$this->products = $data->products;
			}
			else
			{
				$this->getAssocProducts();
			}
			parent::validate();
		}
		catch (Exception $ex) {
			parent::invalidate();
		}
	}
	
	public function getAssocProducts()
	{
		global $wpdb;
		
		$sql = "select * from ".MM_TABLE_COUPON_RESTRICTIONS." where coupon_id='{$this->id}'";
		$rows = $wpdb->get_results($sql);
		
		$products = array();
		if(is_array($rows) && count($rows)>0){
			foreach($rows as $row)
			{
				$products[$row->product_id] = $row->product_id;
			}
		}
		$this->products =$products;
	}
	
	private function saveProducts()
	{
		global $wpdb;
		
		if($this->shouldUpdateProducts)
		{
			$sql = "delete from ".MM_TABLE_COUPON_RESTRICTIONS." where coupon_id='{$this->id}'";
			$wpdb->query($sql);
			if(!empty($this->products) && is_array($this->products)){
				foreach($this->products as $k=>$v){
					$sql = "insert into ".MM_TABLE_COUPON_RESTRICTIONS." set 
						coupon_id='{$this->id}',
						product_id='".mysql_escape_string($k)."',
						date_added=NOW(),
						date_modified=NOW()
					";
					$wpdb->query($sql);
				}
			}
		}
	}
	
	public function remove()
	{
		global $wpdb;
		$sql ="delete from ".MM_TABLE_COUPONS." where id='{$this->id}' limit 1";
		$wpdb->query($sql);
		$this->invalidate();
	}

	private function codeExists()
	{
		global $wpdb;
		$sql = "select count(*) as total from ".MM_TABLE_COUPONS." where coupon_code='".$this->couponCode."' and id !='".$this->id."'";
		$row = $wpdb->get_row($sql);
		return $row->total>0;	
	}
		
	public function commitData()
	{
		global $wpdb;
		
		if($this->codeExists())
		{
			return false;
		}
		
		$couponData = array(
				"coupon_code"                 => $this->couponCode,
				"coupon_type"                 => $this->couponType,
				"coupon_value"                => $this->couponValue,
				"coupon_value_currency"       => ($this->couponType == MM_Coupon::$TYPE_DOLLAR)?MM_CurrencyUtil::getActiveCurrency():null,
				"description"                 => $this->description,
				"recurring_billing_setting"   => $this->recurringBillingSetting,
				"quantity"                    => $this->quantity,
				"start_date"                  => $this->startDate,
				"end_date"                    => $this->endDate,
				"coupon_name"                 => $this->couponName,
				"date_modified"               => MM_Utils::getCurrentTime()
		);
		
		if(intval($this->id)>0)
		{
			if ($wpdb->update(MM_TABLE_COUPONS,$couponData, array("id"=>$this->id)) !== false)
			{
				$this->saveProducts();
				return $this->id;
			}
		}
		else
		{
			if ($wpdb->insert(MM_TABLE_COUPONS,$couponData) !== false)
			{
				$this->id = $wpdb->insert_id;
				$this->saveProducts();
				return $this->id;
			}

		}
		return false;
	}
		
		
	/** GETTERS / SETTERS **/
	
	public function setProducts($prods)
	{
		$this->products = $prods; 
	}
	
	public function getProducts()
	{
		return $this->products; 
	}

	public function getCouponCode()
	{
		return $this->couponCode;
	}

	public function setCouponCode($val)
	{
		$this->couponCode = $val;
	}

	public function getCouponType()
	{
		return $this->couponType;
	}

	public function setCouponType($val)
	{
		$this->couponType = $val;
	}

	public function getCouponValue($doFormat=false)
	{
		if ($this->getCouponType() == MM_Coupon::$TYPE_DOLLAR)
		{
			return $doFormat ? _mmf($this->couponValue,$this->couponValueCurrency) : number_format(floatval($this->couponValue),MM_CurrencyUtil::getPrecisionForCurrency($this->couponValueCurrency));
		}
		else 
		{
			//this means its either free or a percentage off
			return number_format(floatval($this->couponValue),0);
		}
	}

	public function setCouponValue($val)
	{
		$this->couponValue = $val;
	}

	public function getDescription()
	{
		return $this->description;
	}

	public function setDescription($val)
	{
		$this->description = $val;
	}

	public function getQuantity()
	{
		if($this->quantity == "-1")
		{
			return "";
		}
		
		return $this->quantity;
	}

	public function setQuantity($val)
	{
		if($this->quantity == "" || $this->quantity == "-1" || strtolower($this->quantity) == "unlimited")
		{
			$this->quantity =  "-1";
		}
		
		$this->quantity = $val;
	}

	public function getStartDate($formatted=true)
	{
		if($formatted)
		{
			if(empty($this->endDate))
			{
				return MM_Utils::dateToLocal(MM_Utils::getCurrentTime(), "n/d/Y");
			}
			
			if(preg_match("/(0000)/", $this->startDate))
			{
				return MM_Utils::dateToLocal(MM_Utils::getCurrentTime(), "n/d/Y");
			}
			
			return Date("n/d/Y", strtotime($this->startDate));
		}
		
		return $this->startDate;
	}

	public function setStartDate($val)
	{
		$this->startDate = $val;
	}

	public function getEndDate($formatted=true)
	{
		if($formatted)
		{
			if(empty($this->endDate))
			{
				return "";
			}
			
			if(preg_match("/(0000)/",$this->endDate))
			{
				return "";
			}
			
			return Date("n/d/Y", strtotime($this->endDate));
		}
		
		return $this->endDate;
	}

	public function setEndDate($val)
	{
		$this->endDate = $val;
	}

	public function getRecurringBillingSetting()
	{
		return $this->recurringBillingSetting;
	}

	public function setRecurringBillingSetting($val)
	{
		$this->recurringBillingSetting = $val;
	}

	public function getCouponName()
	{
		return $this->couponName;
	}

	public function setCouponName($val)
	{
		$this->couponName = $val;
	}
	
	
	/** UTILITIES **/
	
	public static function getDataByCode($couponCode)
	{
		$coupon = new MM_Coupon();
		
		if(!empty($couponCode))
		{
			global $wpdb;
			$sql = "SELECT * FROM ".MM_TABLE_COUPONS." WHERE coupon_code='".$couponCode."'";
			$result = $wpdb->get_row($sql);
		
			if($result)
			{
				$coupon->setId($result->id);
				$coupon->setData($result);
			}
		}
	
		return $coupon;
	}
		
	public static function getCouponAltInfo($userId, $productId)
	{
		global $wpdb;
		
		$sql = "select c.* from ".MM_TABLE_COUPON_USAGE." u, ".MM_TABLE_COUPONS." c
					where
						u.user_id='{$userId}' and 
						u. product_id='{$productId}' and 
						u.coupon_id=c.id limit 1  ";
		
		$row = $wpdb->get_row($sql);
		
		return $row;
	}
	
	public static function userHasProductCoupon($userId, $productId)
	{
		global $wpdb;
		
		$sql = "select count(*) as total from ".MM_TABLE_COUPON_USAGE."
					where user_id='{$userId}' and product_id='{$productId}'  ";
		
		$row = $wpdb->get_row($sql);
		
		return $row->total>0;
	}
		
	public static function addUsed($code, $userId, $productId)
	{
		global $wpdb;
		
		$coupon = MM_Coupon::getDataByCode($code);
		
		if($coupon->isValid())
		{
			$sql = "insert into ".MM_TABLE_COUPON_USAGE." set 
				coupon_id = '".$coupon->getId()."', 
				user_id = '{$userId}', 
				product_id = '{$productId}'
			";
			
			$wpdb->query($sql);
		}
	}
	
		
	public static function hasAvailableCoupon($code="")
	{
		global $wpdb;
		
		$mysqlNow = MM_Utils::getCurrentTime();
		$codeSQL = empty($code)?"":$wpdb->prepare("(c.coupon_code=%s) AND ",$code);
		$sql = "SELECT c.id FROM ".MM_TABLE_COUPONS." c ".
			   "WHERE {$codeSQL}".
			   "(c.start_date <= '{$mysqlNow}') AND ((c.end_date = '') OR (c.end_date LIKE '0000-%') OR (c.end_date >= '{$mysqlNow}'))".
			   "AND ((c.quantity = '-1') OR (c.quantity > (select count(*) AS total FROM ".MM_TABLE_COUPON_USAGE." u WHERE u.coupon_id = c.id)))";
		
		return ($wpdb->query($sql) > 0);
	}
	

	public static function isBeingUsed($id)
	{
		global $wpdb;
		
		$sql = "select count(*) as total from ".MM_TABLE_COUPON_USAGE." where coupon_id='{$id}' ";
		$row = $wpdb->get_row($sql);
		return $row->total>0;
	}
	
	
	public function setCouponValueCurrency($currency)
	{
		$this->couponValueCurrency = $currency;
	}
	
	
	public function getCouponValueCurrency()
	{
		return $this->couponValueCurrency;
	}
}
