class MM_1ClickPurchaseForm extends MM_AbstractForm
{
	public $product;
	public $user;
	public $memberData;
	public $couponsAvailable = false;
	public $productId = 0;
	public $productName = "";
	public $productPrice = "";
	public $productDescription = "";
	public $isShippable = false;
	public $shippingMethods = "";
	public $shippingCountryList = "";
		
	/**
	 * Default constructor. Takes an associative array of configuration parameters
	 * @param Array $params an associative array of form configuration parameters
	 */
	public function __construct($params=null)
	{	
		$this->product = MM_SmartTagUtil::getCurrentProduct();
		
		if($this->product->isValid())
		{
			$this->initialize();
		}
		else 
		{
			return "";
		}
	}
	
	public function initialize()
	{
		$executionStatus = new MM_Response();
		
		$this->user = MM_SmartTagUtil::getCurrentUser(true);
		
		if($this->product->hasTrial())
		{
			$this->productPrice = $this->product->getTrialAmount(true);
		}
		else
		{
			$this->productPrice = $this->product->getPrice(true);
		}
		
		$this->productDescription = $this->product->getDescription();
		$this->isShippable = (bool) $this->product->isShippable();
		$this->productId = $this->product->getId();
		
		$membership = $this->product->getAssociatedMembership();
		$bundle = $this->product->getAssociatedBundle();
		
		if($membership->isValid())
		{
			$this->productName = $membership->getName();
		}
		else if($bundle->isValid())
		{
			$this->productName = $bundle->getName();
		}
		else
		{
			$this->productName = $this->product->getName();
		}
	
		$this->couponsAvailable = MM_Coupon::hasAvailableCoupon();
		
		// set default member data values
		$this->memberData = array();
		
		$this->memberData["mm_field_user_id"] = "";
		$this->memberData["mm_field_shipping_method"] = "";
		$this->memberData["mm_field_shipping_address"] = "";
		$this->memberData["mm_field_shipping_city"] = "";
		$this->memberData["mm_field_shipping_state"] = "";
		$this->memberData["mm_field_shipping_zip"] = "";
		$this->memberData["mm_field_shipping_country"] = "";
		$this->memberData["mm_field_coupon_code"] = "";
		
		if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
		{
			$testData = MM_TestDataUtils::getCheckoutFormTestData();
			$this->memberData["mm_field_shipping_address"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_address");
			$this->memberData["mm_field_shipping_city"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_city");
			$this->memberData["mm_field_shipping_state"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_state");
			$this->memberData["mm_field_shipping_zip"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_zip");
			$this->memberData["mm_field_shipping_country"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_country");
			$this->memberData["mm_field_shipping_method"] = "";
		}
		
		if($this->user->isValid())
		{
			$this->memberData["mm_field_user_id"] = $this->user->getId();
			$this->memberData["mm_field_shipping_method"] = "";
			$this->memberData["mm_field_shipping_address"] = $this->user->getShippingAddress();
			$this->memberData["mm_field_shipping_city"] = $this->user->getShippingCity();
			$this->memberData["mm_field_shipping_state"] = $this->user->getShippingState();
			$this->memberData["mm_field_shipping_zip"] = $this->user->getShippingZipCode();
			$this->memberData["mm_field_shipping_country"] = $this->user->getShippingCountry();
		}
		
		// shipping methods
		$this->shippingMethods = MM_HtmlUtils::getShippingMethodList($this->memberData["mm_field_shipping_method"]);
		
		// countries
		if(is_null($this->memberData["mm_field_shipping_country"]) || $this->memberData["mm_field_shipping_country"] == "")
		{
			$this->memberData["mm_field_shipping_country"] = MM_CountryUtils::$DFLT_COUNTRY_ISO;
		}

		$this->shippingCountryList = MM_HtmlUtils::getCountryList($this->memberData["mm_field_shipping_country"]);
		
		$this->isValid = true;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at 
	 * the top of the form based on the the current configuration.
	 * @return String header HTML for the checkout form
	 */
	public function generateFormHeader()
	{
		$str = "";
		
		$str .= $this->getJavascriptIncludes();
		
		$str .= "<form id='mm_1clickpurchase_form' name='mm_1clickpurchase_form'>
";
		$str .= "<input type='hidden' id='mm_product_id' name='mm_product_id' value='{$this->productId}' />
";
		$str .= "<input type='hidden' id='mm_is_shippable' name='mm_is_shippable' value='".(($this->isShippable == true) ? "1" : "0")."' />
";
		$str .= "<input type='hidden' id='mm_data_product_price' value='".(($this->productPrice == "" || strtolower($this->productPrice) == "free") ? _mmf(0.00) : $this->productPrice)."' />
";
		$str .= "<input type='hidden' id='mm_data_shipping_price' value='0' />
";
		$str .= "<input type='hidden' id='mm_data_discount' value='0' />
";
		
		return $str;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at
	 * the bottom of the form based on the the current configuration.
	 * 
	 * @return String footer HTML for the checkout form
	 */
	public function generateFormFooter()
	{
		$str = "";
		
		$str .= "</form>
";
		$str .= $this->getInitJavascript($this->memberData);
	
		return $str;
	}
	
	/**
	 * This function returns the include statements for required javascript files.
	 * @return String that contains the javascript for including required javascript files.
	 */
	public function getJavascriptIncludes()
	{
		$str = "";
		
		$userJSDir = MM_PLUGIN_NAME."/resources/js/user/";
		$jsFileUrl = plugins_url("{$userJSDir}mm-1clickpurchase-form.js");
		$str .= '<script type="text/javascript" src="'.$jsFileUrl.'?ver='.MM_MemberMouseService::getPluginVersion().'"></script>
';
		return $str;
	}
	
	/**
	 * This function returns the javascript to initialize the checkout form. 
	 * @param array $defaultData this contains the default data used to prepopulate certain form elements
	 * @return String that contains the javascript to initializes the checkout form.
	 */
	public function getInitJavascript($defaultData)
	{
		$str = "<script>
";
		$str .= "jQuery(function() {
";
		$str .= "oneclickpurchase_js.countryChangeHandler(\"shipping\");
";
		if(isset($defaultData["mm_field_shipping_state"]))
		{
			$str .= "oneclickpurchase_js.initStateDropdown(\"shipping\", \"{$defaultData["mm_field_shipping_state"]}\");
";
		}
		
		$str .= "oneclickpurchase_js.shippingMethodChangeHandler();
";
		$str .= "oneclickpurchase_js.discountChangeHandler(oneclickpurchase_js.formatMoney(\"0.00\"));
";	
		if($this->couponsAvailable) 
		{
			$str .= "oneclickpurchase_js.applyCoupon();
";
		}
		
		$str .= "});
";
		
		$str .= "</script>
";
		
		return $str;
	}
	
	/**
	 * This function processes the MM_Form_Section tag. It is responsible for checking if the current user 
	 * should see the contents of this section based on the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_section($content, $atts, $code)
	{
		$outputStr = "";
		
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_Session::value(MM_Session::$KEY_LAST_FORM);
		
		if(isset($type))
		{	
			switch(strtolower($type))
			{
				case "shippinginfo":
					$outputStr .= "<div ".(($form->isShippable == false) ? "style=\"display:none;\"" : "").">
";
					break;
					
				case "coupon":
					$outputStr .= "<div ".((!$form->couponsAvailable) ? "style=\"display:none;\"" : "").">
";
					break;
					
				default:
					return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}.";
					break;
			}
				
			$outputStr .= do_shortcode($content)."</div>
";
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for SmartTag {$code}.";
		}
	}
	
	/**
	 * This function processes the MM_Form_Field tag. It is responsible for rendering the 
	 * form field based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_field($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_Session::value(MM_Session::$KEY_LAST_FORM);
		
		if(!isset($type))
		{
			$type = "input";
		}
		
		switch(strtolower($type))
		{
			case "input":
				if(isset($name))
				{
					$outputStr = self::generateInputFormField(strtolower($name), $form->memberData, $form);
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code} with type {$type}.";
				}
				
				break;
			
			case "custom":
			case "custom-hidden":
				if(isset($id))
				{
					$customField = MM_CustomField::getDataByFieldId($id);
			
					if($customField->isValid())
					{
						$crntValue = "";
						if(isset($form->memberData["mm_custom_field_{$id}"]) && $form->memberData["mm_custom_field_{$id}"] != "")
						{
							$crntValue = $form->memberData["mm_custom_field_{$id}"];
						}
				
						if($type == "custom-hidden")
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}' name='mm_custom_field_{$id}' ";
							$outputStr .= "value='".htmlentities(stripslashes($crntValue), ENT_QUOTES)."' ";
							$outputStr .= "/>
";
						}
						else
						{
							$outputStr .= $customField->draw($crntValue, $class);
			
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_type' ";
							$outputStr .= "value='".$customField->getType()."' ";
							$outputStr .= "/>
";
						}
				
						$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_label' ";
								
						if(isset($form->memberData["mm_custom_field_{$id}_label"]))
						{
							$outputStr .= "value='".htmlentities(stripslashes($form->memberData["mm_custom_field_{$id}_label"]), ENT_QUOTES)."' ";
						}
								
						$outputStr .= "/>
";
						if(isset($isrequired) && strtolower($isrequired) == "true")
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_required' value='1' />
";
						}
						else
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_required' value='0' />
";
						}
					}
					else
					{
						$outputStr .= "Invalid custom field ID of '{$id}' passed to SmartTag {$code}";
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'id' attribute is required for SmartTag {$code} with type {$type}.";
				}
				
				break;
				
			default:
				return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}";
				break;
		}
			
		return $outputStr;
	}
	
	public static function generateInputFormField($name, $defaultData, $form=null, $customCssClass="mm-textField")
	{
		$outputStr = "";
		
		switch(strtolower($name))
		{		
			case "shippingaddress":
				$outputStr .= "<input type='text' id='mm_field_shipping_address' name='mm_field_shipping_address' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_address"]), ENT_QUOTES)."' class='{$customCssClass}' />
";
				break;
					
			case "shippingcity":
				$outputStr .= "<input type='text' id='mm_field_shipping_city' name='mm_field_shipping_city' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_city"]), ENT_QUOTES)."' class='{$customCssClass}' />
";
				break;
					
			case "shippingstate":
				$outputStr .= "<input type='text' id='mm_field_shipping_state' name='mm_field_shipping_state' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_state"]), ENT_QUOTES)."' class='{$customCssClass}' />
";
				$outputStr .= "<select id='mm_field_shipping_state_dd' size='1' onchange=\"oneclickpurchase_js.stateChangeHandler('shipping');\" class=\"mm-selectList\">
";
				$outputStr .= MM_HtmlUtils::getUSStatesList();
				$outputStr .= "</select>
";
				break;
					
			case "shippingzipcode":
				$outputStr .= "<input type='text' id='mm_field_shipping_zip' name='mm_field_shipping_zip' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_zip"]), ENT_QUOTES)."' class='{$customCssClass}' />
";
				break;
					
			case "shippingcountry":
				$outputStr .= "<select id='mm_field_shipping_country' name='mm_field_shipping_country' onchange=\"oneclickpurchase_js.countryChangeHandler('shipping');\" class=\"mm-selectList\">
";
				$outputStr .= $form->shippingCountryList;
				$outputStr .= "</select>
";
				break;
				
			case "shippingmethod":
				$outputStr .= "<select id='mm_field_shipping_method' name='mm_field_shipping_method' onchange='oneclickpurchase_js.shippingMethodChangeHandler();' class=\"mm-selectList\">
";
				$outputStr .= $form->shippingMethods;
				$outputStr .= "</select>
";
				break;
					
			case "couponcode":
				$outputStr .= "<input type='text' id='mm_field_coupon_code' name='mm_field_coupon_code' value='".htmlentities(stripslashes($defaultData["mm_field_coupon_code"]), ENT_QUOTES)."' onkeydown='return oneclickpurchase_js.couponCheck(event);' class='{$customCssClass}' />
";
				break;
		}
		
		return $outputStr;
	}
	
	/**
	 * This function processes the MM_Form_Data tag. It is responsible for rendering the 
	 * data element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_data($content, $atts, $code)
	{
		$outputStr = "<span class=\"mm-data\">";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_Session::value(MM_Session::$KEY_LAST_FORM);
	
		if(isset($name))
		{
			switch(strtolower($name))
			{
				case "productname":
					$outputStr .= $form->productName;
					break;
					
				case "productdescription":
					$outputStr .= $form->productDescription;
					break;
					
				case "productprice":
					$outputStr .= $form->productPrice;
					break;
					
				case "shippingprice":
					$outputStr .= "<span id=\"mm_label_shipping_price\"></span>";
					break;
					
				case "discount":
					$outputStr .= "<span id=\"mm_label_discount\"></span>";
					break;
					
				case "totalprice":
					$outputStr .= "<span id=\"mm_label_total_price\"></span>";
					break;
				
				default:
					return "Invalid name of '{$name}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr."</span>
";
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code}.";
		}
	}
	
	/**
	 * This function processes the MM_Form_Message tag. It is responsible for rendering the 
	 * message element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_message($content, $atts, $code)
	{
	$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_Session::value(MM_Session::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "couponsuccess":
					$outputStr .= "<span id=\"mm_label_coupon_success\" class=\"mm-couponSuccessMessage\" style=\"display:none\"></span>";
					break;
					
				case "couponerror":
					$outputStr .= "<span id=\"mm_label_coupon_error\" class=\"mm-couponErrorMessage\" style=\"display:none\"></span>";
					break;
				
				default:
					return "Invalid type of '{$type}' passed to {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
	
	/**
	 * This function processes the MM_Form_Button tag. It is responsible for 
	 * returning the appropriate javascript to submit the form based on the type passed.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_button($content, $atts, $code)
	{
	$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_Session::value(MM_Session::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{	
				case "applycoupon":
					$outputStr .= "javascript:oneclickpurchase_js.applyCoupon();";
					break;
					
				default:
					return "Invalid type of '{$type}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
}

