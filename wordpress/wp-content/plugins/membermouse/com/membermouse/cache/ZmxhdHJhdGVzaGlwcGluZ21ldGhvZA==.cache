/**
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) Membermouse, LLC. All rights reserved.
 */

class MM_FlatRateShippingMethod extends MM_ShippingMethod
{
	
	protected $token = "FLATRATE";
	
	/**
	 * Create/Maintain the flat-rate options table
	 * @see MM_ShippingMethod::install()
	 */
	public function install()
	{
		parent::install();
		
		$sql[] = "CREATE TABLE ".MM_TABLE_FLATRATE_SHIPPING_OPTIONS." (\n".
				 "id bigint(20) NOT NULL AUTO_INCREMENT,\n".
				 "option_name varchar(255) NOT NULL,\n".
				 "rate decimal(10,2) NOT NULL,\n".
				 "PRIMARY KEY  (id)\n".
				 ")";
	
		foreach ($sql as $query)
		{
			dbdelta($query);
		}
	}
	
	
	/**
	 * Returns an array of objects representing valid shipping options for this shipping method. The object contains a 
	 * key, description, and a rate. The key is a unique identifier that the shipping method should be able to use later to 
	 * uniquely identify the option chosen. keys are always in the form "<token>-<identifier>"
	 * 
	 * @see MM_ShippingMethod::getShippingOptions()
	 * @param MM_Order $order The order to calculate shipping for. Irrelevant for flat rate method
	 * @return array $shippingOptions an array of objects containing key, name, and rate for the valid shipping options
	 */
	public function getShippingOptions($order="")
	{
		global $wpdb;

		$shippingOptions = array();
		
		$tableShippingOptions = $wpdb->get_results("SELECT id, option_name, rate from ".MM_TABLE_FLATRATE_SHIPPING_OPTIONS);
		if (!is_null($tableShippingOptions))
		{
			foreach ($tableShippingOptions as $eachTableOption)
			{
				$key = "{$this->token}-{$eachTableOption->id}";
				$shippingOptions[] = new MM_ShippingOption($key,$eachTableOption->option_name, $eachTableOption->rate, $eachTableOption->id,$this->name);
			}
		}
		
		return $shippingOptions;
	}
	
	
	/**
	 * Takes an identifier for a shipping option, and returns an object containing the rate and the description
	 * @see MM_ShippingMethod::getShippingOptionByKey()
	 * 
	 * @param MM_Order $order The order to use in rate calculation
	 * @param string $shippingOptionKey The key referencing the shipping option to use in rate calculation
	 * @return MM_Response object indicating success or failure in rate lookup. On success, the message will contain an MM_ShippingOption object
	 */
	public function getShippingOptionByKey(MM_Order $order, $shippingOptionKey)
	{
		global $wpdb;
		
		if (empty($shippingOptionKey))
		{
			return new MM_Response("Error retrieving shipping rate: No shipping method specified",MM_Response::$ERROR);
		}
		
		//keys look like <TOKEN>-<KEY>, so sanitize the key in case the token has already been removed
		$shippingOptionKey = preg_replace("/{$this->token}-/", "", $shippingOptionKey,1);
		if ($shippingOptionKey == "")
		{
			return new MM_Response("Error retrieving shipping rate: Invalid shipping method",MM_Response::$ERROR);
		}
		
		//for the flat rate method, the key is the id for the option in the table, so do a lookup
		return $this->getShippingOptionById($shippingOptionKey);
	}

	
	/**
	 * Returns the flat rate shipping option with the specified id
	 * 
	 * @param integer $id The id of the shipping option in the flat rate options table
	 * @return MM_Response containing the MM_ShippingOption if found on success, or a descriptive error on failure
	 */
	public function getShippingOptionById($id)
	{
		global $wpdb;
	
		if (empty($id) || !is_numeric($id))
		{
			return new MM_Response("Error retrieving shipping rate: Invalid shipping method id specified",MM_Response::$ERROR);
		}
	
		//for the flat rate method, the key is the id for the option in the table, so do a lookup
		$shippingRateRow = $wpdb->get_row($wpdb->prepare("SELECT * FROM ".MM_TABLE_FLATRATE_SHIPPING_OPTIONS." where id=%d",$id));
	
		if (!is_null($shippingRateRow))
		{
			$shippingOption = new MM_ShippingOption("{$this->token}-{$id}",$shippingRateRow->option_name,$shippingRateRow->rate,$id);
			return new MM_Response($shippingOption);
		}
		else
		{
			return new MM_Response("Error retrieving shipping method: id not found",MM_Response::$ERROR);
		}
	}
	
	
	/**
	 * Adds an option and its rate to the flat rate table
	 * 
	 * @param string $name The name of the option
	 * @param float $rate The cost of this option, currently per order
	 * @return MM_Response indicating success or failure
	 */
	public function addOption($name, $rate)
	{
		global $wpdb; 
		
		$name = trim($name);
		if ($name === "")
		{
			return new MM_Response("Please enter a name for this shipping method",MM_Response::$ERROR);
		}
		
		if (empty($rate) || !is_numeric($rate))
		{
			return new MM_Response("Please enter a valid rate",MM_Response::$ERROR);
		}
		
		$shippingOptionData = array("option_name"=>$name, "rate"=>$rate, "currency"=>MM_CurrencyUtil::getActiveCurrency());
		$result = $wpdb->insert(MM_TABLE_FLATRATE_SHIPPING_OPTIONS,$shippingOptionData);
		
		if ($result === false)
		{
			return new MM_Response("Error creating shipping method");
		}
		else 
		{
			return new MM_Response($wpdb->insert_id);
		}
	}
	
	
	/**
	 * Update an option and its rate in the flat rate table
	 *
	 * @param string $name The name of the option
	 * @param float $rate The cost of this option, currently per order
	 * @return MM_Response indicating success or failure
	 */
	public function updateOption($name, $rate, $id)
	{
		global $wpdb;
	
		$name = trim($name);
		if ($name === "")
		{
			return new MM_Response("Please enter a name",MM_Response::$ERROR);
		}
	
		if (empty($rate) || !is_numeric($rate))
		{
			return new MM_Response("Please enter a valid rate",MM_Response::$ERROR);
		}
		
		if (empty($id) || !is_numeric($id))
		{
			return new MM_Response("Invalid shipping method selected for update",MM_Response::$ERROR);
		}
	
		$shippingOptionData = array("option_name"=>$name, "rate"=>$rate, "currency"=>MM_CurrencyUtil::getActiveCurrency());
		$result = $wpdb->update(MM_TABLE_FLATRATE_SHIPPING_OPTIONS,$shippingOptionData,array("id"=>$id));
	
		if ($result === false)
		{
			return new MM_Response("Error updating shipping method");
		}
		else
		{
			return new MM_Response();
		}
	}
	
	
	/**
	 * Delete a rate from the flat rate table
	 * 
	 * @param integer $rateId The id of the option to delete from the flat rate table
	 * @return MM_Response representing whether the operation was successful or not
	 */
	public function deleteOption($optionId)
	{
		global $wpdb;
		
		if (empty($optionId))
		{
			return new MM_Response("Error deleting shipping method",MM_Response::$ERROR);
		}
		
		$deleteOptionSQL = "DELETE FROM ".MM_TABLE_FLATRATE_SHIPPING_OPTIONS." WHERE id = %d";
		$result = $wpdb->query($wpdb->prepare($deleteOptionSQL,$optionId));
		
		if ($result === false)
		{
			return new MM_Response("Error deleting shipping method");
		}
		else 
		{
			return new MM_Response();
		}
	}
	
	
}

