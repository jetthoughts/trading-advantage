class MM_DecisionTagProcessor_V2 extends MM_DecisionTagProcessor
{	
	public static function mm_member_decision($content, $atts, $code)
	{
		$user = MM_SmartTagUtil::getCurrentUser();
		
		if(is_array($atts) && count($atts)>0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key=$v;
			}
		}
		
		if($user->isValid())
		{
			$protectedContent = new MM_ProtectedContentEngine();
			
			$statusCheck = self::$IGNORE;
			$membershipCheck = self::$IGNORE;
			$bundleCheck = self::$IGNORE;
			$isFreeCheck = self::$IGNORE;
			$daysAsMember = 0;
			$daysAsMemberComparison = ">";
				
			// get number of days as member
			if(isset($daysasmember))
			{
				if(intval($daysasmember) < 0)
				{
					$daysAsMemberComparison = "<";
				}
					
				$daysAsMember = abs($daysasmember);
			}
				
			// check to see if the current member has the appropriate status
			if(isset($status))
			{
				$compare = array();
				$compare[] = MM_Status::getName($user->getStatus(), true);
				$statusCheck = self::doComparison($status, $compare);
			}
				
			// check to see if the current member has the appropriate membership level
			if(isset($membershipid))
			{
				$compare = array();
				$compare[] = $user->getMembershipId();
				$membershipCheck = self::doComparison($membershipid, $compare);
			}
				
			// check to see if the current member has the appropriate bundle
			if(isset($hasbundle))
			{
				$appliedBundles = $user->getAppliedBundles();
				$compare = array();
				
				foreach($appliedBundles as $appliedBundle)
				{	
					$compare[] = $appliedBundle->getBundleId();	
				}

				$bundleCheck = self::doComparison($hasbundle, $compare);
			}
		
			// check to see if current member has the appropriate membership type (free or paid)
			if(isset($isfree))
			{
				$isFreeCheck = self::$FAIL;
					
				$memberType = new MM_MembershipLevel();
				$memberType->setId($user->getMembershipId());
				$memberType->getData();
						
				if($memberType->isValid())
				{
					$isFreeMember = $memberType->isFree();
		
					if((strtolower($isfree) == "true" && $isFreeMember == true) || (strtolower($isfree) == "false" && $isFreeMember == false))
					{
						$isFreeCheck = self::$PASS;
					}
					else
					{
						$isFreeCheck = self::$FAIL;
					}
				}
				else
				{
					$isFreeCheck = self::$PASS;
				}
			}
		}
		else
		{
			$statusCheck = $membershipCheck = $bundleCheck = $isFreeCheck = self::$IGNORE;
			$daysAsMember = 0;
		}
		
		// check to see if the current visitor is a member
		if(isset($ismember))
		{
			$isMemberCheck = self::$FAIL;
		
			if(($ismember == "true" && $user->isValid()) || ($ismember == "false" && !$user->isValid()))
			{
				$isMemberCheck = self::$PASS;
			}
			else
			{
				$isMemberCheck = self::$FAIL;
			}
		}
		else
		{
			$isMemberCheck = self::$IGNORE;
		}
		
		// render content if everything checks out
		if($user->isValid())
		{
			if(self::pass($statusCheck) && self::pass($membershipCheck) && self::pass($bundleCheck)
				&& self::pass($isFreeCheck) && self::pass($isMemberCheck))
			{
				if($user->isAdmin())
				{
					$preview_obj = MM_Preview::getData();
					$membershipId = $preview_obj->getMembershipId();
				}
				else
				{
					$membershipId = $user->getMembershipId();
				}
		
				if($protectedContent->canAccessChunk($user->getId(), 'member_types', $membershipId, $daysAsMember, $daysAsMemberComparison))
				{
					return do_shortcode($content);
				}
			}
		}
		else if(self::pass($isMemberCheck, true))
		{
			return do_shortcode($content);
		}
	}
	
	/**
	 * This function processes the MM_Order_Decision tag. It is responsible for determining
	 * whether or not the content should be displayed based on the parameters passed. It can be
	 * used in the context of a checkout form or a confirmation page
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function mm_order_decision($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_Session::value(MM_Session::$KEY_LAST_FORM);
		$order = MM_SmartTagUtil::getCurrentOrder();
		$productId = 0;
		$membershipId = 0;
		$isShippable = false;
		$isFree = false;
		$dataSet = false;
		
		if(isset($form) && !empty($form))
		{
			// get data from Checkout Form
			$dataSet = true;
			$productId = $form->productId;
			$membershipId = $form->membershipLevelId;
			$isFree = $form->isFree;
			$isShippable = $form->isShippable;
		}
		else if($order->isValid())
		{
			// get data from order
			$products = $order->getProducts();
			if(count($products) > 0)
			{
				$orderItem = array_pop($products); // currently assuming supporting 1 product per order
				if($orderItem->isValid())
				{
					$productId = $orderItem->getItemId();
					$product = new MM_Product($productId);
					
					if($product->isValid())
					{
						$dataSet = true;
						$isFree = false;
						$isShippable = $product->isShippable();
						$assocMembership = $product->getAssociatedMembership();
						
						if($assocMembership->isValid())
						{
							$membershipId = $assocMembership->getId();
						}
					}
				}
			}
		}
		else 
		{
			// if the form or order is not set then that means it was a free member sign up
			// confirm that this is a confirmation page and then populate the data from the 
			// user in the session
			global $post;
			
			if(isset($post->ID) && intval($post->ID)>0)
			{
				$postId = $post->ID;
			}
			else if(isset($post->data->ID) && intval($post->data->ID))
			{
				$postId = $post->data->ID;
			}
			
			if(MM_CorePageEngine::isConfirmationPage($postId))
			{
				$user = MM_SmartTagUtil::getCurrentUser();
				
				if($user->isValid())
				{
					$dataSet = true;
					$isFree = $user->getMembershipLevel()->isFree();
					$isShippable = false;
					$productId = 0;
					$membershipId = $user->getMembershipId();
				}
			}
		}
		
		if($dataSet)
		{
			$productCheck = self::$IGNORE;
			$membershipCheck = self::$IGNORE;
			$isFreeCheck = self::$IGNORE;
			$isShippableCheck = self::$IGNORE;
			
			// check for product
			if(isset($productid))
			{
				$compare = array();
				$compare[] = $productId;
				$productCheck = self::doComparison($productid, $compare);
			}
			
			// check for membership
			if(isset($membershipid))
			{
				$compare = array();
				$compare[] = $membershipId;
				$membershipCheck = self::doComparison($membershipid, $compare);
			}
			
		 	// check if membership is free
			if(isset($isfree))
	 		{
	 		 	$isFreeCheck = self::$FAIL;
	 			 	 
	 			if((strtolower($isfree) == "true" && $isFree == true) 
	 					|| (strtolower($isfree) == "false" && $isFree == false))
	 			{
	 				$isFreeCheck = self::$PASS;
	 			}
	 			else
	 			{
	 				$isFreeCheck = self::$FAIL;
	 			}
		 	}
			
		 	// check if product is shippable
			if(isset($isshippable))
	 		{
	 		 	$isShippableCheck = self::$FAIL;
	 			 	 
	 			if((strtolower($isshippable) == "true" && $isShippable == true) 
	 					|| (strtolower($isshippable) == "false" && $isShippable == false))
	 			{
	 				$isShippableCheck = self::$PASS;
	 			}
	 			else
	 			{
	 				$isShippableCheck = self::$FAIL;
	 			}
		 	}
		 	
		 	if(self::pass($productCheck) && self::pass($membershipCheck)
		 			&& self::pass($isFreeCheck) && self::pass($isShippableCheck))
		 	{
		 		return do_shortcode($content);
		 	}
		 	else
		 	{
		 		return "";
		 	}
		}
		else
		{
			return "";
		}
	}
	
	/**
	 * This function processes the MM_Affiliate_Decision tag. It is responsible for determining
	 * whether or not the content should be displayed based on the parameters passed and the current 
	 * affiliate/subaffiliate values stored in cookies
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function mm_affiliate_decision($content, $atts, $code)
	{
		if(self::checkCookies($atts))
		{
			return do_shortcode($content);
		}
		else
		{
			return "";
		}
	}
	
	/**
	 * This function processes the MM_Custom_Decision tag. It is responsible for determining
	 * whether or not the content should be displayed based on the parameters passed and the current 
	 * values stored in cookies
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function mm_custom_decision($content, $atts, $code)
	{
		if(self::checkCookies($atts))
		{
			return do_shortcode($content);
		}
		else
		{
			return "";
		}
	}
 	
 	protected static function checkCookies($atts)
 	{
 		$testResults = array();
 		$checkCtr = 0;
 			
 		if(is_array($atts) && count($atts) > 0)
 		{	
 			foreach($atts as $key=>$checkValues)
 			{
 				$testResults[$checkCtr] = $cookiesCheck = self::$FAIL;
 				
 				// get value set in cookies for the current key
 				if(strtolower($key) == "affiliate")
 				{
 					$cookieValue = MM_Cookies::getAffiliateValue();
 				}
 				else if(strtolower($key) == "subaffiliate")
 				{
 					$cookieValue = MM_Cookies::getSubAffiliateValue();
 				}
 				else
 				{
 					$cookieValue = MM_Cookies::getCookie($key);
 				}
				
 				$compare = array();
 				$compare[] = $cookieValue;
 				$testResults[$checkCtr] = self::doComparison($checkValues, $compare);
 				
 				$checkCtr++;
 			}
 		}
 		
 		$testPassed = true;
 		for($i = 0; $i < count($testResults); $i++)
 		{
 			$testPassed = $testPassed && self::pass($testResults[$i]);
 		}
 		
 		return $testPassed;
 	}
 	
 	private static function doComparison($expression, $compareValues)
 	{
 		$eqFormat = "in_array('".self::$PLACEHOLDER_VALUE."', \$compareValues)";
 		$nEqFormat = "!in_array('".self::$PLACEHOLDER_VALUE."', \$compareValues)";
 		$expression = self::parseExpression($expression, $eqFormat, $nEqFormat);
 		$result = false;
 			
 		eval("\$result = {$expression};");
 			
 		if($result)
 		{
 			return self::$PASS;
 		}
 		else
 		{
 			return self::$FAIL;
 		}
 	}
	
	private static function parseExpression($rawExpression, $eqFormat, $nEqFormat)
	{
		$rawExpression = str_split(html_entity_decode($rawExpression));
		$specialCharacters = array("(", ")", "&", "|");
		$buffer = "";
		$expression = "";
		
		foreach($rawExpression as $character)
		{
			// if this is a special character, add it to the expression
			// otherwise add it to the buffer
			if(in_array($character, $specialCharacters)) 
			{
				// if buffer contains items, create the equation and 
				// add it to the expression
				if(!empty($buffer))
				{
					if(trim($buffer) == "!")
					{
						$expression .= $buffer;
					}
					else 
					{
						$format = (self::doNegateValue($buffer)) ? $nEqFormat : $eqFormat;
						$buffer = (self::doNegateValue($buffer)) ? substr($buffer, 1) : $buffer;
						$expression .= str_replace(self::$PLACEHOLDER_VALUE, trim($buffer), $format);
					}
					
					$buffer = "";
				}
				
				$expression .= $character;
			}
			else 
			{
				$buffer .= $character;
			}
		}
		
		if(!empty($buffer))
		{
			if(trim($buffer) == "!")
			{
				$expression .= $buffer;
			}
			else 
			{
				$format = (self::doNegateValue($buffer)) ? $nEqFormat : $eqFormat;
				$buffer = (self::doNegateValue($buffer)) ? substr($buffer, 1) : $buffer;
				$expression .= str_replace(self::$PLACEHOLDER_VALUE, trim($buffer), $format);
			}
		}
		
		$expression = str_replace("&", "&&", $expression);
		$expression = str_replace("|", "||", $expression);
		
		return $expression;
	}
 	
 	private static function doNegateValue($value)
 	{
 		if(strpos($value, "!") === 0)
 		{
 			return true;
 		}
 		else
 		{
 			return false;
 		}
 	}
}
